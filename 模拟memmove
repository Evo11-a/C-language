#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <assert.h>
#include <string.h>
void* my_memmove(void* dest, const void* src, size_t count)//来源不能改变
{
    void* ret = dest;
    assert(dest != NULL);
    assert(src != NULL);
    if (dest < src)//从前往后拷贝，防止被覆盖
    {
        while (count--)
        {
            *(char*)dest = *(char*)src;//void型无法加减，需要强制转换
            ++(char*)dest;
            ++(char*)src;//(强制转换)比后置++优先级低，前置++从右向左执行
        }
    }
    else
    {
        while (count--)
        {
            *((char*)dest + count) = *((char*)src + count);
        }
    }
    return ret;
}
int main()
{
    int arr[30] = { 1,2,3,4,5,6,7,8,9,10 };
    my_memmove(arr, arr+2, 20);
    for (int i = 0; i < 10; i++)
    {
        printf("%d ", arr[i]);
    }
    return 0;
}
