#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#define Max 100000
//反转字符串 
void reverse(char* str,int len)
{
	for(int i=0;i<len/2;i++)
	{
	   char tmp=str[i];
	   str[i]=str[len-i-1];
	   str[len-i-1]=tmp;
	} 
}
//高精度加法 
void add(char* a,char* b,char* sum)
{
	int len_a=strlen(a);
	int len_b=strlen(b);
	int carry=0;//进位 
	reverse(a,len_a);//反转两个字符串以便从最低位开始相加 
	reverse(b,len_b);
	int len=0;//sum的长度
	for(int i=0;i<len_a||i<len_b||carry;i++)
	{
		int ret=carry;
		if(i<len_a)
		{
			ret+=a[i]-'0';//字符转数字 
		}
		if(i<len_b) 
		{
			ret+=b[i]-'0';
		}
		sum[len++]=(ret%10)+'0';
		carry=ret/10;
	} 
	sum[len]='\0';//\0结束字符串
	//反转回正确的顺序 
	reverse(sum,len); 
}
//去除前导零
void removezero(char* str)
{
   	int start=0;
   	while(str[start]=='0'&&str[start+1]!='\0')
   	{
        start++;   		
	}
	int len1=strlen(str);
	for(int j=start;j<len1;j++)
	{
		str[j-start]=str[j];
	}
   	str[len1-start]='\0';
} 
int main()
{
	//高精度转换为加法 
    char a[Max];
    char b[Max];
    char sum[Max];
    scanf("%s %s",a,b);
    //去除前导零 
    int i = 0;
    while (a[i] == '0' && a[i+1] != '\0') 
	{
		i++;
	}
    if (i > 0) {
        memmove(a, a + i, strlen(a + i) + 1);
    }
    i = 0;
    while (b[i] == '0' && b[i+1] != '\0') 
    {
    	i++;
	}
    if (i > 0) {
        memmove(b, b + i, strlen(b + i) + 1);
    }
    add(a,b,sum);
    removezero(sum);
    if(strlen(sum)==0)
    {
    	strcpy(sum, "0"); // 如果结果为0，确保至少有一个字符
	}
    printf("%s\n",sum); 
    return 0;
}
