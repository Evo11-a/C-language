#include <stdio.h>
void Swap(char*a1,char*a2,int width)//width决定几个字节交换
{
   for(int i=0;i<width;i++)
   {
      char tmp=a1;
      a1=a2;
      a2=tmp;
      a1++;
      a2++;
   }
}
//实现B_sort的程序员无法知道未来排序的数据类型
//程序员无法知道待比较的两个元素的类型
void B_sort(void*base,int sz,int width,int (*cmp)(void*e1,void*e2))
{
	//趟数 
	int i = 0;
	for(i=0;i<sz-1;i++)
	{
		//每一趟比较的对数 
		int j = 0;
		for(j=0;j<sz-1;j++)
		{
                        //两个元素的比较
			if(cmp((char*)base+j*width,(char*)base+(j+1)*width>0)
			{
                                //交换
				swap(cmp((char*)base+j*width,(char*)base+(j+1)*width,width)
			}
		}
	}
	
}
//比较两个整型值的
int cmp_int(const void*e1,const void*e2)
{
   //强制转换为整型
   return *(int*)e1-*(int*)e2;
}
//字符串比较不能直接用>=<来比较，应该使用strcmp函数
int main()
{
	int arr[10]={9,8,7,6,5,4,3,2,1,0};
	int sz=sizeof(arr)/sizeof(arr[0]);
        //使用B_sort的程序员一定知道自己排序的是什么数据
        //应该知道如何比较待排序数组中的元素
	B_sort(arr,sz，sizeof(arr[0],cmp_int);
	int i = 0;
	//打印数组 
	for(i=0;i<sz;i++)
	{
	 printf("%d ",arr[i]);	
    }
	return 0;
 } 
